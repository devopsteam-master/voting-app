---
#tasks file for docker
- name: Uninstall old versions
  apt: 
    name: "{{ item }}"
    state: absent
    purge: yes
  loop: [docker-doc, docker.io, docker-compose, docker-compose-v2, podman-docker, containerd, run, docker-ce, docker-ce-cli, containerd.io, docker-buildx-plugin, docker-compose-plugin, docker-ce-rootless-extras]
  tags: clear 


- name: Install required packages
  apt:
    update_cache: yes
    name: "{{ item }}"
  loop:
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common
    - gnupg
  tags: install

- name: Add apt key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg
  tags: install

- name: Get architecture
  command: dpkg --print-architecture
  register: architecture
  tags: install

- name: Add Docker APT repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
    state: present
  tags: install

- name: Update package cache after adding Docker APT repository
  apt:
    update_cache: yes
  tags: install

- name: Install Docker
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - docker-buildx-plugin
    - docker-compose-plugin
  tags: install

- name: Creates directory
  ansible.builtin.file:
    path: /etc/systemd/system/docker.service.d/
    state: directory
  tags: install

- name: Add Docker daemon configuration file
  ansible.builtin.copy:
    content: |
      {
       "live-restore" : true, 
       "metrics-addr" : "0.0.0.0:9323",
       "experimental" : true
      }
    dest: /etc/docker/daemon.json
    mode: "0644"
  notify: Restart Docker daemon
  tags: filternet

#Manage non-root access
- name: Add docker group
  group:
    name: docker
    state: present
  tags: user_access

- name: get username
  command: whoami
  become: false
  register: USER
  tags: user_access

- name: Add user to docker group
  user:
    name: "{{ USER.stdout}}"
    groups: docker
    append: true
  tags: user_access
