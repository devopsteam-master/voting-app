services:
  vote:
#   image: dockersamples/examplevotingapp_vote
    image: ${VOTE_IMAGE}
    hostname: vote-app-{{.Task.Slot}}
    command: python app.py
    environment:
      - OPTION_A=${OPTION_A}
      - OPTION_B=${OPTION_B}
      - REDIS_HOST=redis
      - REDIS_PORT=6380
    networks:
      - traefik-net
      - redis
    deploy:
      replicas: 2
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-net"
        - "traefik.http.routers.vote.entrypoints=http"
        - "traefik.http.routers.vote.rule=Host(`${VOTE_SUB}.${DOMAIN}`)"
        - "traefik.http.routers.vote.middlewares=https-redirect"
        - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
        - "traefik.http.routers.vote-secure.entrypoints=https"
        - "traefik.http.routers.vote-secure.rule=Host(`${VOTE_SUB}.${DOMAIN}`)"
        - "traefik.http.routers.vote-secure.tls=true"
        - "traefik.http.routers.vote-secure.tls.certresolver=mycert"
        - "traefik.http.services.vote.loadbalancer.server.port=80"

  worker:
#   image: dockersamples/examplevotingapp_worker
    image: ${WORKER_IMAGE}
    hostname: worker-app-{{.Task.Slot}}
    networks:
      - redis
      - pg_net
    deploy:
      replicas: 2

  result:
#   image: dockersamples/examplevotingapp_result
    image: ${RESULT_IMAGE}
    hostname: result-app-{{.Task.Slot}}
    networks:
      - traefik-net
      - pg_net
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-net"
        - "traefik.http.routers.result.entrypoints=http"
        - "traefik.http.routers.result.rule=Host(`${RESULT_SUB}.${DOMAIN}`)"
        - "traefik.http.routers.result.middlewares=https-redirect"
        - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
        - "traefik.http.routers.result-secure.entrypoints=https"
        - "traefik.http.routers.result-secure.rule=Host(`${RESULT_SUB}.${DOMAIN}`)"
        - "traefik.http.routers.result-secure.tls=true"
        - "traefik.http.routers.result-secure.tls.certresolver=mycert"
        - "traefik.http.services.result.loadbalancer.server.port=80"

networks:
  traefik-net:
    name: traefik-net
    external: true
  redis:
    external: true
    name: redis
  pg_net:
    external: true
    name: pg_net
