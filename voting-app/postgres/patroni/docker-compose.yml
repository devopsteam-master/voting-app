networks:
  pg_net:

services:
  etcd:
    image: 4rman/patroni
    networks: [ pg_net ]
    environment:
      ETCD_LISTEN_PEER_URLS: http://0.0.0.0:2380
      ETCD_LISTEN_CLIENT_URLS: http://0.0.0.0:2379
      ETCD_INITIAL_CLUSTER: etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
      ETCD_INITIAL_CLUSTER_STATE: new
      ETCD_INITIAL_CLUSTER_TOKEN: tutorial
      ETCD_UNSUPPORTED_ARCH: arm64
    hostname: etcd{{.Task.Slot}}
    command: etcd --name $HOSTNAME --initial-advertise-peer-urls http://$HOSTNAME:2380
    deploy:
      replicas: 3

  haproxy:
    image: 4rman/patroni
    networks: [ pg_net ]
    hostname: db
    command: haproxy
    environment: &haproxy_env
      ETCDCTL_ENDPOINTS: http://etcd1:2379,http://etcd2:2379,http://etcd3:2379
      PATRONI_ETCD3_HOSTS: "'etcd1:2379','etcd2:2379','etcd3:2379'"
      PATRONI_SCOPE: pg_net
      PATRONI_RESTAPI_USERNAME: admin
      PATRONI_RESTAPI_PASSWORD: admin
      PATRONI_SUPERUSER_USERNAME: postgres
      PATRONI_SUPERUSER_PASSWORD: postgres
      PATRONI_REPLICATION_USERNAME: replicator
      PATRONI_REPLICATION_PASSWORD: replicate
      PATRONI_admin_PASSWORD: admin
      PATRONI_admin_OPTIONS: createdb,createrole

  patroni:
    image: 4rman/patroni
    networks: [ pg_net ]
    hostname: patroni{{.Task.Slot}}
    environment:
      <<: *haproxy_env
      PATRONI_NAME: patroni{{.Task.Slot}}
    deploy:
      replicas: 3