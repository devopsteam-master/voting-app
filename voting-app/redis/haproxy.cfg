defaults
  mode tcp
  timeout connect 3s
  timeout server 6s
  timeout client 6s

resolvers docker
  nameserver dns 127.0.0.11:53
  resolve_retries 3
  timeout resolve 5s
  timeout retry   5s
  hold other      10s
  hold refused    10s
  hold nx         10s
  hold timeout    10s
  hold valid      10s
  hold obsolete   10s

listen stats
  mode http
  bind :9000
  stats enable
  stats hide-version
  stats realm Haproxy\ Statistics
  stats uri /
  stats refresh 10s

frontend ft_redis_worker
  mode tcp
  bind *:6379
  default_backend bk_redis_worker

frontend ft_redis_vote
  mode tcp
  bind *:6380
  default_backend bk_redis_vote

#frontend ft_mysql
#  mode tcp
#  bind *:3306
#  default_backend bk_mysql

frontend mysql-frontend
  bind *:3306
  mode tcp
  default_backend mysql-backend

#frontend postgresql_front
#  bind *:5000
#  default_backend postgre_back
#  #mode tcp
#
#
#frontend etcd_front
#  bind *:2379
#  default_backend etcd_back
#  mode tcp

backend bk_redis_vote
  mode tcp
  option tcp-check
  tcp-check send PING\r\n
  tcp-check expect string +PONG
  tcp-check send info\ replication\r\n
  tcp-check expect string role:master
  tcp-check send QUIT\r\n
  tcp-check expect string +OK
  server redis_backend_01 redis-master:6379 maxconn 1024 check inter 1s resolvers docker init-addr libc,none
  server redis_backend_02 redis-slave.1:6379 maxconn 1024 check inter 1s resolvers docker init-addr libc,none backup
  server redis_backend_03 redis-slave.2:6379 maxconn 1024 check inter 1s resolvers docker init-addr libc,none backup

backend bk_redis_worker
  mode tcp
  option tcp-check
  tcp-check send PING\r\n
  tcp-check expect string +PONG
  tcp-check send info\ replication\r\n
  tcp-check expect string role:master
  tcp-check send QUIT\r\n
  tcp-check expect string +OK
  server redis_backend_01 redis-master:6379 maxconn 1024 check inter 1s resolvers docker init-addr libc,none
  server redis_backend_02 redis-slave.1:6379 maxconn 1024 check inter 1s resolvers docker init-addr libc,none backup
  server redis_backend_03 redis-slave.2:6379 maxconn 1024 check inter 1s resolvers docker init-addr libc,none backup

#backend bk_mysql
#  mode tcp
#  option tcp-check
#  server mysql_master mysql-master:3306 maxconn 1024 check inter 1s resolvers docker init-addr libc,none
#  server mysql_slave_1 mysql-slave.1:3306 maxconn 1024 check inter 1s resolvers docker init-addr libc,none backup
#  server mysql_slave_2 mysql-slave.2:3306 maxconn 1024 check inter 1s resolvers docker init-addr libc,none backup
#  server mysql_slave_3 mysql-slave.3:3306 maxconn 1024 check inter 1s resolvers docker init-addr libc,none backup
#


backend mysql-backend
  mode tcp
  balance roundrobin
  option tcp-check
  server node1 galera-node1:3306 maxconn 1024 check inter 1s resolvers docker init-addr last,libc,none
  server node2 galera-node2:3306 maxconn 1024 check inter 1s resolvers docker init-addr last,libc,none backup
  server node3 galera-node3:3306 maxconn 1024 check inter 1s resolvers docker init-addr last,libc,none backup


#backend postgre_back
#  option httpchk HEAD /primary 
#  http-check expect status 200
#  default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions
#
#  server patroni1 patroni1:5432 maxconn 1024 check port 8008 resolvers docker 
#  server patroni2 patroni2:5432 maxconn 1024 check port 8008 resolvers docker 
#  server patroni3 patroni3:5432 maxconn 1024 check port 8008 resolvers docker 
#
#
#backend etcd_back
#  mode http
#  option httpchk GET /v2/keys
#  http-check expect status 200
#  balance roundrobin
#  default-server inter 1s fall 2 rise 1 on-marked-down shutdown-sessions
#
#  server etcd1 etcd1:2379 check inter 1s resolvers docker init-addr libc,none
#  server etcd2 etcd2:2379 check inter 1s resolvers docker init-addr libc,none
#  server etcd3 etcd3:2379 check inter 1s resolvers docker init-addr libc,none
